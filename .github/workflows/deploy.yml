# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Only run deployment after successful test workflow
  workflow_run:
    workflows: ['Test and Quality Checks']
    types:
      - completed
    branches: ['main']

  # Keep manual trigger for testing
  workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  # Check if deployment is needed
  check-changes:
    # Only run if the triggering workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history to compare changes

      - name: Check if relevant files changed
        id: check
        run: |
          # Get the commit that triggered the workflow_run
          TRIGGERING_COMMIT="${{ github.event.workflow_run.head_sha }}"

          # Check if any build-relevant files changed
          if git diff --name-only HEAD~1 $TRIGGERING_COMMIT | grep -E '^(src/|public/|index\.html|vite\.config\.js|package\.json|yarn\.lock)' > /dev/null; then
            echo "should-deploy=true" >> $GITHUB_OUTPUT
            echo "Build-relevant files changed, deployment needed"
          else
            echo "should-deploy=false" >> $GITHUB_OUTPUT
            echo "No build-relevant files changed, skipping deployment"
          fi

  # Single deploy job since we're just deploying
  deploy:
    needs: check-changes
    # Only run if relevant files changed (the workflow success check is already done in check-changes)
    if: ${{ needs.check-changes.outputs.should-deploy == 'true' }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'yarn'
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload dist folder
          path: './dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
